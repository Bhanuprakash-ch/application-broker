{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"n",
				"Nil	bool ƒ"
			],
			[
				"F",
				"Fatalf	 ƒ"
			],
			[
				"D",
				"DashboardRootURL	string ν"
			],
			[
				"Fata",
				"Fatalf	 ƒ"
			],
			[
				"New",
				"NewHandler	*Handler, error ƒ"
			],
			[
				"StatusN",
				"StatusNotFound	 Ɩ"
			],
			[
				"Conf",
				"StatusConflict	 Ɩ"
			],
			[
				"E",
				"Equal	bool ƒ"
			],
			[
				"Fat",
				"Fatal	 ƒ"
			],
			[
				"s",
				"serviceHandler	ServiceHandler ν"
			],
			[
				"c",
				"catalogHandler	CatalogHandler ν"
			],
			[
				"No",
				"NotNil	bool ƒ"
			],
			[
				"N",
				"NotEmpty	bool ƒ"
			],
			[
				"Ca",
				"CatalogProvider	interface ¡"
			],
			[
				"Wr",
				"WriteEntity	error ƒ"
			],
			[
				"Ser",
				"ServiceBindingDeletionRequest	struct ʈ"
			],
			[
				"Se",
				"ServiceBindingRequest	struct ʈ"
			],
			[
				"Del",
				"DeleteService	error ƒ"
			],
			[
				"Print",
				"Printf	 ƒ"
			],
			[
				"P",
				"FormParameter	*restful.Parameter ƒ"
			],
			[
				"U",
				"Username	string ν"
			],
			[
				"CF",
				"CFPlan	struct ʈ"
			],
			[
				"Not",
				"NotEmpty	bool ƒ"
			],
			[
				"S",
				"Services	[]*catalog.CFService ν"
			],
			[
				"He",
				"WriteHeader	 ƒ"
			],
			[
				"res",
				"response	*restful.Response ν"
			],
			[
				"Status",
				"StatusOK	 Ɩ"
			],
			[
				"Pri",
				"Println	 ƒ"
			],
			[
				"Pr",
				"Printf	 ƒ"
			],
			[
				"Int",
				"IntVar	 ƒ"
			],
			[
				"Printf",
				"Printf	 ƒ"
			],
			[
				"Printl",
				"Println	 ƒ"
			],
			[
				"f",
				"Fatalf	 ƒ"
			],
			[
				"get",
				"GetNowInUtc	time.Time ƒ"
			],
			[
				"GetT",
				"GetNowInUtc	time.Time ƒ"
			],
			[
				"R",
				"Request	*Request ν"
			],
			[
				"Fatal",
				"Fatalln	 ƒ"
			],
			[
				"e",
				"Equal	bool ƒ"
			],
			[
				"sav",
				"savedJob	*Job ν"
			],
			[
				"Mak",
				"MakeSampleJob	*Job ƒ"
			],
			[
				"RE",
				"Result	*Result ν"
			],
			[
				"Re",
				"Request	*Request ν"
			],
			[
				"Job",
				"Job	struct ʈ"
			],
			[
				"JOB_STATUS_CODE_",
				"JOB_STATUS_CODE_RUNNING	 Ɩ"
			],
			[
				"O",
				"On	time.Time ν"
			],
			[
				"REQUST_STATUS_CODE_R",
				"REQUST_STATUS_CODE_RUNNING	 Ɩ"
			],
			[
				"REQUST_STATUS_CODE_C",
				"REQUST_STATUS_CODE_PROCESSED	 Ɩ"
			],
			[
				"Reeq",
				"RequstStatusCodeName	map[int32]string ν"
			],
			[
				"RequstStatusCode",
				"RequstStatusCodeValue	map[string]int32 ν"
			],
			[
				"rec",
				"rec"
			],
			[
				"St",
				"StoreConfig	struct ʈ"
			],
			[
				"st",
				"store	*Store ν"
			],
			[
				"m",
				"message	*Message ν"
			],
			[
				"p",
				"pubCounter	int64 ν"
			],
			[
				"M",
				"Millisecond	 Ɩ"
			],
			[
				"con",
				"config	*Config ν"
			],
			[
				"pro",
				"producerClient	*sarama.Client ν"
			],
			[
				"REQUSTSTATUSCODE_E",
				"REQUSTSTATUSCODE_FAILED	 Ɩ"
			],
			[
				"Ti",
				"Time	struct ʈ"
			],
			[
				"Sp",
				"Sprintln	string ƒ"
			],
			[
				"C",
				"Content	*Content ν"
			],
			[
				"Con",
				"Content	struct ʈ"
			],
			[
				"pri",
				"Printf	 ƒ"
			],
			[
				"pr",
				"Printf	 ƒ"
			],
			[
				"fl",
				"Float64bits	uint64 ƒ"
			],
			[
				"Result",
				"Result	struct ʈ"
			],
			[
				"Pani",
				"Panicf	 ƒ"
			],
			[
				"loadConfigFromF",
				"loadConfigFromFile	*Config ƒ"
			],
			[
				"load",
				"loadFromFlags	*Config, error ƒ"
			],
			[
				"THI",
				"THIS_MONTH_FORMAT	 Ɩ"
			],
			[
				"Prinl",
				"Println	 ƒ"
			],
			[
				"l",
				"list	*[]int64 ν"
			],
			[
				"In",
				"Int64Var	 ƒ"
			],
			[
				"i",
				"id	string ν"
			],
			[
				"Get",
				"GetFavorites	favorites []anaconda.Tweet, err error ƒ"
			],
			[
				"t",
				"tweetsFound	int ν"
			],
			[
				"invalidC",
				"invalidCount	int ν"
			],
			[
				"errorC",
				"errorCount	int ν"
			],
			[
				"T",
				"Tweet	struct ʈ"
			],
			[
				"follower",
				"followerList	[]int64 ν"
			],
			[
				"Prin",
				"Println	 ƒ"
			],
			[
				"Fil",
				"Filter	interface ¡"
			],
			[
				"u",
				"username	string ν"
			],
			[
				"Q",
				"Query	TwitterQuery ν"
			],
			[
				"back",
				"background-color"
			],
			[
				"err",
				"error"
			],
			[
				"Mocked",
				"MockedDevice"
			],
			[
				"font",
				"font-size"
			],
			[
				"Rethink",
				"rethinkdb"
			],
			[
				"in",
				"increment"
			],
			[
				"re",
				"return"
			],
			[
				"fun",
				"function"
			],
			[
				"Uncaught",
				"uncaught"
			],
			[
				"time",
				"timestamp"
			],
			[
				"access",
				"accessKey"
			],
			[
				"ld",
				"load"
			],
			[
				"su",
				"sub_on"
			],
			[
				"tab",
				"tableName"
			],
			[
				"dir",
				"dirName"
			]
		]
	},
	"buffers":
	[
		{
			"file": "common/provider.go",
			"settings":
			{
				"buffer_size": 929,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/GoSublime/GoSublime.sublime-build",
	"command_palette":
	{
		"height": 315.0,
		"selected_items":
		[
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instl",
				"Package Control: Install Package"
			],
			[
				"format",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"json",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"instla",
				"Package Control: Install Package"
			],
			[
				"Pack",
				"Package Control: Install Package"
			],
			[
				"js",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"jsn",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"jso",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"for",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"fo",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"form",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"Package Control: re",
				"Package Control: Remove Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Ins",
				"Package Control: Install Package"
			]
		],
		"width": 435.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/common",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/service"
	],
	"file_history":
	[
		"/Users/markchma/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/markchma/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/common/provider-error.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/service/config.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/service/config_test.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/service/generic-service-provider.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/common/provider.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/broker/broker.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/.gitignore",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/bin/push.sh",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/common/utils.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/common/s3.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/broker/config.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/Procfile",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/bin/run.sh",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/broker/handler.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/app-launching-service-broker/main.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/.cfignore",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service/generic-service-provider.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/bin/run.sh",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/main.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/broker/config.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service/config.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service/config_test.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service/generic-service-provider_test.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/broker/broker.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/broker/handler.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/common/provider.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/broker/service-handler.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service/service-binding-provider.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service/service-provider_test.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service/service-provider.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service/manager.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/bin/test-service-delete.sh",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/bin/test-catalog.sh",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service/catalog-provider.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/common/provider-error.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/common/errors.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/common/providers.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/broker/catalog-handler.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service/catalog-provider_test.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/common/utils.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service/providers.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/broker/service-provider.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/broker/service-binding-provider.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/broker/catalog-provider.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/broker/config_test.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/broker/catalog-provider_test.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/broker/utils.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/commons/utils.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/broker/server.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/broker/service-provider_test.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/catalog/catalog-handler.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/catalog/catalog-provider.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/catalog/catalog-provider_test.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/server.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/catalog-handler.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/catalog-provider_test.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/config_test.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/config.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service-binding-provider.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service-handler.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service-provider.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service-provider_test.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/utils.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/catalog-provider.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service/service-handler.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/broker.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/options.go",
		"/Users/markchma/Code/go/src/github.com/mchmarny/common-types-cf/catalog.go",
		"/Users/markchma/Library/Application Support/Sublime Text 3/Packages/GoSublime/USAGE.md",
		"/Users/markchma/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/markchma/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/bin/test-service-binding-delete.sh",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/bin/test-service-binding.sh",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/bin/test-service-state2.sh",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/README.md",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/catalog-handlers.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/service-handlers.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/bin/test-service-state.sh",
		"/Users/markchma/Code/go/src/github.com/intel-data/cf-catalog/domain.go",
		"/Users/markchma/Library/Application Support/Sublime Text 3/Packages/User/GoSublime.sublime-settings",
		"/Users/markchma/Library/Application Support/Sublime Text 3/Packages/GoSublime/GoSublime.sublime-settings",
		"/Users/markchma/Library/Application Support/Sublime Text 3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/catalog.go",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/.gitignore",
		"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker/handlers.go",
		"/Users/markchma/Code/datapat.io/server.go",
		"/Users/markchma/Code/tapaas/cf-catalog-helper/untitled",
		"/Users/markchma/Code/tapaas/cf-catalog-helper/catalog_test.go",
		"/Users/markchma/Code/tapaas/cf-catalog-helper/domain.go",
		"/Users/markchma/Code/tapaas/cf-catalog-helper/README.md",
		"/Users/markchma/Code/tapaas/cf-catalog-helper/catalog.go",
		"/Users/markchma/Code/tapaas/cf-catalog-helper/catalog-sample.json",
		"/Users/markchma/Code/datapat.io/data.go",
		"/Users/markchma/Code/datapat.io/config.go",
		"/Users/markchma/Code/datapat.io/config_test.go",
		"/Users/markchma/Code/datapat.io/util.go",
		"/Users/markchma/Code/tapaas/cf-catalog-helper/util.go",
		"/Users/markchma/Code/datapat.io/config/cf-datapatio-manifest.json",
		"/Users/markchma/Code/datapat.io/config/config-sample.json",
		"/Users/markchma/Code/tapaas/atk/rest-server/config/java_main.yml",
		"/Users/markchma/Code/tapaas/atk/rest-server/bin/api-server.sh",
		"/Users/markchma/Drive/Scripts/set-env.sh",
		"/Users/markchma/Drive/Scripts/rotate-ssh-config.sh",
		"/Users/markchma/Drive/Scripts/set-proxy.sh",
		"/Users/markchma/.ssh/config",
		"/Users/markchma/.ssh/config.template",
		"/Users/markchma/.ssh/config-intel.template",
		"/Users/markchma/Code/pulse/pulse.go",
		"/Users/markchma/Code/pulse/scheduling/scheduler.go",
		"/Users/markchma/Code/pulse/scheduling/task.go",
		"/Users/markchma/Code/tweetbot/config/app.js",
		"/Users/markchma/Code/tweetbot/lib/tweet.js",
		"/Users/markchma/Code/datapat.io/store.go",
		"/Users/markchma/Code/datapat.io/store_test.go",
		"/Users/markchma/Downloads/eecfd5c2-4fb2-4d40-a5a5-5e64b82ec645/readme.txt",
		"/Users/markchma/Code/datapat.io/data_test.go",
		"/Users/markchma/Code/datapat.io/queue.go",
		"/Users/markchma/Code/datapat.io/main.go",
		"/Users/markchma/Code/datapat.io/config/cassandra.ddl",
		"/Users/markchma/Code/datapat.io/pipeline.go",
		"/Users/markchma/Code/datapat.io/bin/test-rest.sh",
		"/Users/markchma/Code/datapat.io/bin/test-rest-loop.sh",
		"/Users/markchma/Code/thingz/collector/lib/store.js",
		"/Users/markchma/Code/datapat.io/bin/reset-env.sh",
		"/Users/markchma/Code/datapat.io/bin/init-cassandra.sh",
		"/Users/markchma/Code/datapat.io/domain.go"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker",
			"/Users/markchma/Code/datapat.io",
			"/Users/markchma/Code/anaconda",
			"",
			"/Users/markchma/Code/go/src/github.com/mchmarny/anaconda",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"ServiceProvider",
			"theme",
			"time.Now()",
			".UTC",
			".On",
			"pubCounter",
			".Meta",
			".Content",
			".Processed",
			"REQUST_STATUS",
			"job stored",
			"ToString",
			"SUBSCRIBER_LOOP_DELAY",
			"Store",
			"ioutil",
			"screen",
			"append",
			"Source",
			"followerIds",
			"RetweetedStatus",
			"query",
			"IsValid",
			"destroy",
			"favorite",
			"delete",
			"temperature",
			"setFave",
			"proj",
			"counts",
			"'",
			"conf",
			"store",
			"proxy",
			"wait_until",
			"error",
			"removeHit",
			"'",
			"getRoundedTime",
			"INCRBYFLOAT",
			"hincrby",
			"backendEvents",
			"events",
			"uddi",
			"parse",
			"uuid",
			"create_observations",
			"Component Id",
			"get_account_guid",
			"account_guid",
			"create_observations",
			"create_component",
			"activate",
			"”",
			"Downl",
			"json",
			"sensorsList",
			"registrationCompleted",
			"sensorsList",
			"registrationCompleted",
			"$data",
			"devicePerfix",
			"todo",
			"onConnect",
			"assert",
			"backendEvents",
			"loadBackend",
			"tls",
			"'",
			"conf.",
			"env.",
			"output_dir_path",
			"root",
			"test-",
			"access_key",
			"AdminData",
			"'",
			"\"",
			"http",
			"getUserByAccessKey",
			"ack",
			"parseAccount",
			"find",
			"/register",
			"req.session.messages",
			"User saved",
			"user s",
			"getOneResult",
			"validateEmail",
			"flash",
			"failureFlash",
			"isAuthenticated",
			"ensureAuthenticated",
			"isAuthenticated",
			"ensureAuthenticated",
			"passport",
			"bcrypt",
			"Missing",
			"username",
			"winston",
			"is_d",
			"send_freq",
			"fs.exists",
			"writeFileSync",
			"throw",
			"csv",
			"fs",
			"bold",
			"1400",
			"mar",
			"1300",
			"1200",
			"1060",
			"Deve"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"JOB_STATUS",
			"Store",
			"\"",
			"\"$data\"",
			"\"",
			"",
			"IoTKitCloudAdminData",
			"\"",
			"'",
			"SEND_FREQ",
			"1200",
			"1400",
			"1300"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "common/provider.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 929,
						"regions":
						{
						},
						"selection":
						[
							[
								929,
								929
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.9o:///Users/markchma/Code/go/src/github.com/intel-data/generic-cf-service-broker":
	{
		"height": 126.0
	},
	"output.GsDoc-output-output":
	{
		"height": 112.0
	},
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "broker.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 269.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
